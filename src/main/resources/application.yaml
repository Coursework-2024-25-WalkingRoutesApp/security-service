spring:
  application:
    name: security-service

  cloud:
    openfeign:
      client:
        config:
          database-provider:
            url: http://${DEV_ENV_HOST_DATA}:8081
          notification-service:
            url: http://${DEV_ENV_HOST_NOTIFICATION}:8083

  kafka:
    topic:
      verify-user-email: verify-user-email
    bootstrap-servers: ${DEV_ENV_HOST_KAFKA}:${DEV_ENV_PORT_KAFKA}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        retries: 5
        retry.backoff.ms: 1000
        acks: 1
        spring:
          json:
            add:
              type:
                headers: false

server:
  port: 8082

feign:
  data-provider-api:
    base-path: /api/data-provider/security
    endpoints:
      register: /register
      login: /login
      get-user-info: /info
      update-username: /update-username
      update-user-photo: /update-user-photo
      get-user-by-email: /by-email
      save-verification-code: /save-verification-code
      check-verified: /check-verified
      get-verification-code: /get-verification-code
      update-verification-status: /update-verification-status
  notification-service-api:
    base-path: /api/notification-service/mail
    endpoints:
      send-email: /send-mail

jwt:
  secret: {JWT_SECRET}
  expiration: {JWT_EXPIRATION}

notification-service:
  transport-type: {NOTIFICATION_SERVICE_TRANSPORT_TYPE}

management:
  endpoints.web.exposure.include: 'prometheus, health, info, metrics'
  metrics:
    enable:
      all: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  prometheus:
    metrics:
      export:
        enabled: true

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html